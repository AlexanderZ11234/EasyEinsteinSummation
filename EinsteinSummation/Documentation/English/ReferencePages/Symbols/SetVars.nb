(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    159189,       3254]
NotebookOptionsPosition[    144699,       2943]
NotebookOutlinePosition[    153115,       3136]
CellTagsIndexPosition[    153072,       3133]
WindowTitle->SetVars
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {
    TemplateBox[{"Einstein Summation Package Symbol", 
      RGBColor[
      0.023521148023270023`, 0.42745085139216266`, 0.7294108638979683]},
     "PacletName"], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           TemplateBox[{},
            "HeaderMenuArrow"]],ExpressionUUID->
           "a4801d37-2c74-422e-b6a0-0ded309d6700"]
         }],ExpressionUUID->"f75e4790-b75f-4536-872b-4dacb322c0d2"],
         StripOnInput->False], {"SetMetric":>Documentation`HelpLookup[
        "paclet:EinsteinSummation/ReferencePages/Symbols/SetMetric"], "$vars":>
        Documentation`HelpLookup[
        "paclet:EinsteinSummation/ReferencePages/Symbols/$vars"], 
        "$TensorDefinitions":>Documentation`HelpLookup[
        "paclet:EinsteinSummation/ReferencePages/Symbols/$TensorDefinitions"],
         "EvaluateEinsteinSummation":>Documentation`HelpLookup[
        "paclet:EinsteinSummation/ReferencePages/Symbols/\
EvaluateEinsteinSummation"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "1806acb7-881a-4535-ac5c-4ca46727456e"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Tutorials",
          " ",
          Cell[BoxData[
           TemplateBox[{},
            "HeaderMenuArrow"]],ExpressionUUID->
           "6b4a74cd-c84c-44ad-ad5b-54085a3dd1d1"]
         }],ExpressionUUID->"d4d9658c-63f1-4c41-b3da-e7daab5df01d"],
         StripOnInput->False], {
        RowBox[{"Einstein", " ", "Summation"}]:>Documentation`HelpLookup[
        "paclet:EinsteinSummation/ReferencePages/Tutorials/EinsteinSummation"]\
},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"Tutorials"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "a509cdd1-1d16-4915-a4ad-355e95aae155"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           TemplateBox[{},
            "HeaderMenuArrow"]],ExpressionUUID->
           "c25e9582-9aeb-4dd4-95a7-b16802ed8230"]
         }],ExpressionUUID->"08c43d0f-96e2-4c68-811e-1af6d1909afd"],
         StripOnInput->False], {
        RowBox[{
        "Tensor", " ", "Expressions", " ", "with", " ", "Einstein", " ", 
         "Summation"}]:>Documentation`HelpLookup[
        "paclet:EinsteinSummation/ReferencePages/Guides/\
TensorExpressionswithEinsteinSummation"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "eeaa90e2-d5dd-45e4-8940-731b0d841246"]
    }], "AnchorBar",ExpressionUUID->"2deb4e8b-448a-4d57-809a-a511ca6683d5"]}
  }]], "AnchorBarGrid",
 CellID->6332795,ExpressionUUID->"6ed6c646-0db9-4b81-9ba7-87c65bb826fc"],

Cell["EinsteinSummation`", "ContextNameCell",
 CellID->52132611,ExpressionUUID->"b99370b0-c192-42f2-937c-aab4b7bc48b3"],

Cell[CellGroupData[{

Cell["SetVars", "ObjectName",
 CellID->146560904,ExpressionUUID->"b4213063-416c-40d7-b06b-df6b29924d8f"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
        "SetVars", "paclet:EinsteinSummation/ReferencePages/Symbols/SetVars"},
        "RefLink",
        BaseStyle->{}], "[", 
       StyleBox["vars", "TI"], "]"}]], "InlineFormula", "InlineFormula",
      ExpressionUUID->"35cd4316-9252-41c5-8a9d-a735def7fbd4"],
     "\[LineSeparator]",
     " sets up the parametrics of space."
    }],ExpressionUUID->"9584c936-26c2-4b50-a324-cd6fb9c7d116"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, {None}}, "RowsIndexed" -> {}}},
 CellID->50325162,ExpressionUUID->"236f35cf-347f-46b5-b5f8-6f597e0d3870"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData[{
      Cell[
       BoxData[
        TemplateBox[{}, "DetailsHeader"]], "NotesFrameText", 
       "NotesFrameText"]}]], 6, {
   TaggingRules, "Openers", "NotesSection", "0"}, 
   RGBColor[
    Rational[217, 255], 
    Rational[101, 255], 0]},
  "SectionOpener"]], "NotesSection", "NotesSection",
 WholeCellGroupOpener->True,
 CellID->161981613,ExpressionUUID->"4dac352d-6d16-4142-a707-8e03fdef69f5"],

Cell["\<\
The input should be an explicit list, and should not be a symbolic vector \
(may support this feature later).\
\>", "Notes",
 CellID->380875200,ExpressionUUID->"34bfe762-1a54-4f9b-ae83-1ed13080781f"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
   "SetVars", "paclet:EinsteinSummation/ReferencePages/Symbols/SetVars"},
   "RefLink",
   BaseStyle->{}]], "InlineFormula", "InlineFormula",ExpressionUUID->
  "1d09fcb8-deae-4f4d-806c-ad4dc227daa4"],
 " not only assign the input to ",
 Cell[BoxData[
  TemplateBox[{
   "$vars", "paclet:EinsteinSummation/ReferencePages/Symbols/$vars"},
   "RefLink",
   BaseStyle->{}]], "InlineFormula", "InlineFormula",ExpressionUUID->
  "48ef2c79-4aaf-4304-9dc5-ed882b0c605b"],
 ", but will also set up new metric and clean up ",
 Cell[BoxData[
  TemplateBox[{
   "$TensorDefinitions", 
    "paclet:EinsteinSummation/ReferencePages/Symbols/$TensorDefinitions"},
   "RefLink",
   BaseStyle->{}]], "InlineFormula", "InlineFormula",ExpressionUUID->
  "2c3c0be3-3327-4f26-b667-a2a14e2944b9"],
 " if the dimension of space changed."
}], "Notes",
 CellID->50986788,ExpressionUUID->"d70180a1-871a-45a6-963c-e2de95690e6e"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection", "0"}]]]],

Cell[BoxData[
 TagBox[
  TogglerBox[Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection", "0"}]], {
   True->
   GraphicsBox[{},
    ImageSize->{0, 80}], Open->
   GraphicsBox[{},
    ImageSize->{0, 80}]}, 
   GraphicsBox[{InsetBox[
      TagBox[GridBox[{
         {
          TemplateBox[{10},
           "Spacer1"], 
          GraphicsBox[
           TagBox[RasterBox[CompressedData["
1:eJztmVlvW8cVgIP2pY/9C/0Xfe1Lgb6m6A9I0DToSwokBYr+gSBFW9uxLcuy
RHET910Ud1Lc9327XMTlcr3c931TD0nLZiTZchU7CYL5IF/PnTtzzpkzc2fO
ufzNp3/7+C+/+Oijj776FVw+/uQfv/vyy0/++cdfw82fvvjqr59/8dmf//DF
3z/7/LMvf/vpL6Hy9/CPC//W5cs3s1wu3/L0vbBaXVexWq0+tNI7Wa1+OCtu
euCHBKZ4sVhAIZ9NnclkBqOxWK5OJ+Nev1+rVkrlcqPZ7HY7jUZzPp93202v
zzebzTrdrtFoqDXbg36/0+3N57NcNp1MZWPRUOIiZbdZG+3uaDQYjcfz2bQP
bdqtdqcLWprNxmAwGA4HlUolm05bbPZ2u1OrVaORUDAcAY0mi4UgKs1GHRTB
DKyWy06nA+1r9cZkPNLqtN3+EGpMRmO13hoOXmrP45nERSaGhaOJVKcDujqD
jf3hSLRClExWOxgPqmFOu532YrEcDPqtNhQW7VYLxggC9QZ9s93r93oVomwy
m6u1Wr1eH43G0BG0d7tdEBjHohfpDHSBIdRr9XKpeJFKE0QZbJtNp61WazKd
gnN6QL8PhREMs1qFxiBsMpm0WuCu3to5rXYyjmm0umyuUCjkiEoVLNFplIlU
pr8hn8tGY/HZbA5KG/VGu9OeTicutxseVcrFSBTrD/rdTgfsSVykN5N4z8Va
zGUjWBwK7UZNqzvXn+todPrDB/9Vas7jWIRCo3F5HA6Xd3JC5/KFAi6LwebU
qwSNSuFwuTQ6jccTsBgMiVTK47JPGKxjMgkmUS6TUqjUr7/+2u72RQPeb775
F4vNUmh04YBv79kz6Euln0ilp0dHJC5fQD9h+P1BHoclkJxWyiUqjS4Wizls
5gmTMV8ua0TxwX/+TWewQAKdTmdw2LkczjyhX2nns5hr7XwuZ6P9OBCKaDVK
MoXC5wvp1GOuUFQu5o/J5P1ne3v7B7ACX+w9NtvdHqcVBiWVSGj0EwqFymIy
1wUqhclkc9gsFocHuhwuX6fdZLOYLw4O9p8/F4qlVrOBQqHI5fKD/X2bw4un
L1QqFZlMZjKZ8jPp42+f8PkCjz/osltBmlqj5rBYAoGARDrm8XiHhySJSESj
nRwePs/mi3KpkMkCmxlCsYRGpSZTGa3y7OGjR3yBkEYmP336hMvnqTWaEzqN
y+E9ePAwGkvA1LBOTh49esThsEiko8PDI6323O31wvq89wYCr/588+5PxsNM
JksQRCaTsVmt+WKpViVCkWg+n6PTT7z+gNvl9Hh98Xii1+vabeZ44gLHMx63
G8Mwh93u9foi4bDFbKk3W1gk7PP5nQ5HrdFMJWKwqNLpTL5QqFcrbrcnFsOs
ZhOHJwiHw4FgMLImmkwm44kkbDJerzeZTHg8nnAoCDsDvL8atTqKxcEMt8vl
8XjH45HDZonFkzie3Wp32u1gWCSy1g7vWqlUukhdbB8lkslOu22z2ULBoD8Q
mkzGWo0KL8Bbi7vdLpFIlEpn8SyeyaScTmcgEAwE/OFwJBQKgU3BUBgOAJAT
i8WgEkin0zBGv9/v8wcGo0m1XHC6PdAdz2btVovT5ZZJJZlcqVIu2O128IlS
oZArNWqVUqHSRCNhEJXB84V8rlKtF/NZ8G0Oz8LuFAh4obpRr/q9PrDZZDKC
6ngMg1nweP31es3pcHb7g4tkXK/Xg+oYFgU/xOLgk7zP56vWqqsPeVbBhvO+
Ra4Gw9GdjaaTyfvWu2PBcgGnxveRsNywWwOb/+4tHEmzxWJz+SCHO8i+955/
k9UVMKjVDttH28G+vL1qsK159Wi5U7/1zE1pr1bp6gaXG5du++/qfS3zZeUd
2nfLl1fT9B35N2zY1N9i503jt42vOe2V/F1f3erbreCbMneH83q8O9Zeq3mt
7n1N/xtYfYBd5UPI/NFt+CkM6n5sFuSr8mr39rbGq2sjfceB3+x4a5tdgavL
Oyy5VfLNF/x+xrxF45323CXn8moTeGOb5dXTa9Oxvr2XeXeYdO+ePwvumtl3
lfJejPkhIRrDQKYNhdl8Gc938rVhqT4cTtfpwGiymM7XpxiEYatNMAN5a75Q
hJrxJjCDZDYajYynMygvFwvwISSw8/kCslSiQkCv0Wg02bQsFgsQ1bc663Br
k243ITefTqfQejKZrivnMzyXG42GhWJxNlvXNDpjS7R+uXHqfLF27HA8n63j
qFWzXg1Hsa39VaIM6ca2PBr2wR6rzQ6hMkhuNxuQFy/W6c18G4DB/3Dt9zrb
UWyO1AVk9+uxjNfXy53DHZ6OJ+PX5uE43BQLebgON7Hr+ixeLmYgc7WEtGRt
4WAAacJiJwAYb8RuV9dwOIQrTvTB4e54PYR3oRpkTGcvI5vZxtuD0cwUrOC1
deN6a6TylDvD2Wi6qLZH6XIfJmgMblusQ6TZYjVfrHtC4mDQn9ebnct3W4Ol
Qg6LJ6GQyLUF5rzEmqeq0/AnsuTPHEWJOcfQZaW2gtBaHI4nYhGfx+erVGoq
+VCu1ubxjFAo5AsgtxYwWWyZTO4PRdLJ2MHzgzOZTK1WSaVSvcEA2bTkVEpn
0FMZ/FTMg1wYcm0qlaxQa7OZFIfDEYqEZ7IzPp8vU6q0KtkxlVYlSkdHL5QK
pdlsKdRGAnNO4y0bgxWWLsM15iSWvNSxnrUinoZcns3lQb629+Qhlkw5beaD
gxcikRj+SGRKvdU5V8mPSGSRWHx6KlXK5Tq9Ec+kRGC3gH/w/JlUoSwV81qd
RnYm5QtFmWz29FTEFwioVCok6ZBUa86NmfTFEekIzOPxuDQa9Yh0COMSiyXQ
LJcv1Yjiwf5zsUTC4/NEIiFXKIQM0WQyQ7ZHOiYpVWo2g8HjC9hcLuS8NpsV
EkDwod3piuV654GKA6s5Yg32OYwLF1jyYmte6S5pPGXwP0uXNQQqMCPHqhRN
naZpMjAjPBMOV4oypfSUoaBwlThGHLzB1mcb/bnHad17tj8YTd/xlYf0udcf
QKHZGet8hMxRBGMieMcdq7sTTaWzKHWWys2R1ktUW/1IOORw2HW6c4vFHMFi
RKmoVqngFQsGAzaHQ8DjhGMXiWgQpsNqNRuNBhipwWDYf/ZModZACl8oleNY
2OZwRaNh8H84GiuXCnqjKYpFSMfHWt25SqXSanXbj1o2i9mgN3j9gf5wLncW
YeotkRq4QuOvlBpDtafk9PlrFQK6QIIslylAEVGtXcQxJpNlsdrcHve5Qd9o
NtUK2emZzOvzaFRKnU7ncHk67YZCJoUu0Aby+FqVgLWyXoTi0zJBQF4PxssV
qlAoyGYxXR5/AzJupwvGrpDLrDaH2+Vwe3yJRFypVOYKsAAvNp+GPIGATy6T
QdYPGT2k+z6f5+xMBsuSz+PqDSZ/MFipVo16nUQsIVNpEQyrtcYyZzFV7meJ
vs5LuBLNUKZti1ZhaOZwFRZGhuife8veZBNWvj/V8iWbNqweybaNoeq6HK1Z
IzV9oOJONsOZlsJZLLenSSzscnvukQW+7av+ux1kuVxufktiuwI/4Pni2/uW
S6XFG4yGHW274V8DTo1rtd/nhwmY4sFw/P/22n4kv8lbPr7NZ9MyUVkXFncn
6z9WBPE6/n9Tg+v57O3138OA70b+q9d/16zabXktg35Vs/tot3JXwjUhl1fJ
/s2+t4q9s8HN0b0e11V593prYXV5S/uXt/fKYrZdCnncarHAbgwRTKezDhtK
BVyj09XqjVq91mp3wBWDQb/b7fQ2v0RA/Lb5/WXU73U3H+5W7Xbb47KHIrHN
7zjDZrM1n80g2hkNBz04XQZ9cOVw0A/4vBEsOZvNoM1gAMIghOw2Gs3BcABR
ot1muQpa3ikxfF+8X2k/HV13st2+zHoVlUZjcziko0MKnZFOpZgMGplKEYhE
ZAqFzWaTSEfHZAqDxYTwhsvlnkqlAsE6djomH+uMJiwahqhob+9prlCSSyXr
KIjHg8P98aNvxacyp9366PHjdDqtVqshIABBSoXi6ZMnEAsJhAIqhcLhcF+8
OGAwmRAp4YXy5U/MRT9jtn6uVUoQMOQLeYfd5g+E4VW1mEwQgIXCkXQK1sIF
1Pv8gVQ6DQGPzWZxe7zBQADCoXgimc3lIACzWW0QMo3G40jYz2GzFSoNvMgQ
y3l9fiwaheAQHvl9PiwWz+JZq8Ws1mgg3YhhEVgGMrnS6YDIKmw2meKJxAf6
MI74YYAcfza/PSK6CVEuNVvtD2oPAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFA
IBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBQCAQCAQCgUAgEAgEAoFAIBCInz3/A45vxio=
             "], {{0, 30.}, {72.85714285714285, 0}}, {0, 255},
             ColorFunction->RGBColor,
             ImageResolution->168.],
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True],
            Selectable->False],
           DefaultBaseStyle->"ImageGraphics",
           ImageSizeRaw->{72.85714285714285, 30.},
           PlotRange->{{0, 72.85714285714285}, {0, 30.}}], 
          TemplateBox[{10},
           "Spacer1"]}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], Scaled[{0, 0}], Scaled[{0, 0}]], InsetBox[
      PaneSelectorBox[{True->
       OverlayBox[{
        GraphicsBox[
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 1], Opacity[0.06], 
          RectangleBox[{-360, -40}, {360, 40}]},
         ImagePadding->None,
         ImageSize->{720, 80},
         PlotRangePadding->None], 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJzdmc9vE0cUxyNAosfeckGIXnujJy6tVKk9VOLStFVz4AIlRD00VQMSouXQ
/hEIIfXAta0qFTggkBqpCA40CSUJtKX8ik1i4ti7XjuJfyQkw/uud52345nx
7I+A1cM3tuPdnfeZN+/HjN869vXQiV0DAwMn36A/Q0dPvz8+fvTMJ2/Sh8/G
Tn45OjZy/KOxUyOjI+OHju2mf74TaA9JCPG/kdfaTKr9pCOkC6TbpBJJBNoi
FUk3SedIw6TBFGMplZJjnPQ7szmOrpNGXzPHWdLdhPbLukUae8UcB1PMfy9d
JR14BRznTXaU1tbFvLMq/lmqirsLrpjMlcWf8yVf0/R+ZtEV/xZrIl+pC6ex
oXtOjfQp3TMQV5YcP+rsX/AaYrZQ6dhsoykSeIsrLR3P+R3gUDIsrbbE7GI8
+1X6u1gV5brSP7FYenAo19ITdy21/Vx38mWxWG2oWIYy4DioYniwXMuUgStH
8yON55L2peToyks7yRAKeUAa90oKjrNJ1hLi9z7FL+a1QDFcWtsQy6vrtGaa
4rFbt84HhVpTZjmekCNS4xDTvcZ+sLxC8fpCVFpbEXmBws9LxHXvuWd81vQz
R7iNF5zjRgKOb2RfmPLSFMVoe/7IzuZmx94Zdg/e+98F3+Pap7R+TCz/lVZk
nwzH5IjEBeqDiQHz68nzTvZ2cYScgXBt3sAymSvJ+fhyDI79Xb4wrOlCrRXM
72Ysf4QceP/Y0cfdw/Kq7JO9lhxH+H3oNcx+34qul/VtFq0/ePz4n6O+47qT
d2SODy05LvD70C/p8pIf02y9VyQmFUd43fZr+/oFyme6+ZJ6lx8sOW5zDvRA
qmcjt8p283Wvio9O/ATXyPGEuVeNNe9E6sklSw6+j/P7VtWzc24jErN8vXuG
+JBjiAu9sGos1F5m0z1Ljsh65L13JL59X7dt1YnfO+n37fpr/Xh31bkLtYbZ
VEjCoVuzqNMYW/d9XMFHuhyMfMlsqlpybNlwFNc2fH9kxmGoJXOFiD+eWXIU
Oce0Zl2hXwpjOYt15RnqCHIKs+kvS46bnAN7UdWzsZbDnNlV23R5l8W3Jwnf
3dfkRqk/+dWS4xzn0OWQuQKrB5J94asq77ZZN4UncZeb+pySr0T2JN9Zcgxz
DlP/E/ZVPOdymfqrSB9AelrR93DoKZhN71lyDHIOnGtMaZ6PfMgZqlIdUXJI
9Q+vTkNfA2eofkk5dI8lB3TNpqZDTyhOIvWczbOuT5TXFM4ZdM+XavnPOgYN
xyjnQH+jG6e9frdZtmPX3LeH/nhYUvdvEPYEbjOylzockwO6xVlMc+bnL8qZ
jrTvU3GEa8/1/WDe60u+mDAxGDi+4hzYz+BsxjQubM1jPyL1XTyvlf2Yrmvj
gQt1nO1tq6S3E3BAVzkLzpd6jQ3BRuRr+AhrDj3lI9oPoT7ocmsWLAaOA8G9
LA9ne/6WJUuP88QhuXc01ZTXyWJxvtt1Nvp8pemfzfQTi+V5excLnoneB+ca
SW1D7kDc257PmVhi/P7xMcmReZDLcK4Rxz/oP2F/WB9gW1qWmL9H7SNdkVl4
zUTex14UfQv6SewfkKvgO8TWcn1deW9aloS/D35B+kPHE1MTYV7MiiUGR6jP
SZcT2v+TF/QasCFLlgQcofaSPiB9T/qNNEtaJHmkHGmK9AvpW9K7pN1y3syK
JSWHsfexVVKWOXYW0Q8cSViQ9/lvcv3CEYdFZug3DhsWFUM/cphYdAz9yqFi
QUzrGEgX03LssDosBl1MUQf7haXD8BJ6c/TW
           "], {{0, 50.}, {50., 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
           0.5],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSize->Magnification[0.5],
         ImageSizeRaw->{50., 50.},
         PlotRange->{{0, 50.}, {0, 50.}}]},
        Alignment->{-0.85, Center}], False->
       OverlayBox[{
        GraphicsBox[
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 1], Opacity[0], 
          RectangleBox[{-360, -40}, {360, 40}]},
         ImagePadding->None,
         ImageSize->{720, 80},
         PlotRangePadding->None], 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJztmctL1FEUx4cUbNnOjYht29mqTUFQi6BNU5ELN5omLZpIg6hc1B8hIrRo
WxGULqQgoZzxAer4yPcDZJzxnY6Kb+Z2vsPMdOd67/3d30NnFh34huXv3ns+
93HOubeL1U/9j875fL6G8/SHv+rF9fr6qpd3L9Bf7gcaHtcFamtuBZ7X1tXW
X6kuoH+8nFIhiTH2X4yVkipJLaRe0ir7ZwnSMilIaiJVkIrzwGde9aQfzJl9
J9Xl2P9G0qBD/0ULkQJn7H85cz7/VtZOKjsDhmadE7u7u2xhYYGNjY2xvr4+
FgqFWGdnZ1JdXV1sYGCATU5OsqWlJXZ4eKjqZot0j9r47MqQ4Z1q4NXVVTY4
OJjx2UTBYDDJu7W1peq2+RQ4pAzb29ssHA7b8l+m8fFxdnBw4JrFgkG6lyKR
SHJO3TKk1d3dzdbX12VD+T3gKBc7TSQSbGpqyjP/RS0uLopD/iGVuOQ4EZdO
k0HD0uaCo1G2l6x8wF4bHR1N+hKPx9ne3l4yjm1sbCTbm8aDzc1NcfgahxxZ
OQ5n2uo8TE9Pq84rE/saGRnR9tXb28uOjo74Zr8ccDwTx9bFJZxRzLdoyBfp
b/CzaNFoVMsyMzMjNqmwyZF1LpAfdAw7OzvSebfigK2srGj36P7+Pv95qw2O
UnEs3Z6WrYMdDtj8/Lyy/7m5OfHzIkOOSr4RzqjuPOjMlAOxnP9WPCeC3TTk
aOEboV5SrbnVmTblgK2trSnnS6hd3hpyZE0AaiBZ34itVmaHA2vS09MjHQtz
ydlXQw7+HpesW2V9S3KVKw7YxMSEdCzkXs5+G3JkGV9780KOS/uqEt8WP+u+
hanyLHINZzEnHKo9izyt+71dwXAvkf0O8ZKzuCFHwoQDceysOIaHh3mXIoYc
y3wj3ONkfafzhpf7SpVHhJgSNuQI8o1UcR172crsnnP4KxtLqE8+G3I08Y1w
nzbYs645jo+PlTFFiI2vDTkq+EaqPQuhbvWKIxaLWcaUlF0z5CjmG+FdQ1Wv
C/HQMQfqc1UO7O/vFz8vNOSAvvENVTkdEnKtIw68Mxj2/1HFoOCo4xujvlGN
A6H2dsoxOzur7Bd3Apwbzm7b5IBCpnMGIWaiRjLlwF6y6lNYiw4dg4bjCd8J
alvMj25c+Iq6VeThDfOLe6DqPPBCTOTutiiELjnggNp5H/C+ZDU2BB9R8yHH
IN4hbmK9kB9UsdULFg1HWaptxuCTHT+8kCmLhgPyi3sDc+zlW6JXLBYc0Im3
Ubwv4c6ZTywGHFIW9Inax83aIHbg3Ju+z+lYDDmgO6QTj8l4m8G7hp31QWyD
/+n8AN/cstjggEpIbSJL2pAzEfdxF0XdMjQ0lLw/IFZh7XC2hHopa33dsNjk
SOsh6aeKx6Z1pHzJFQv0gNTq0P8PLFVrpHzINQtURLpBekP6QsJlNErCw/k8
qY/0ifSKdJVUIImbXrG44dDWPqZyyoJzyFnOOZywIO4L/yeXFxx2WCQMecVh
wqJgyDsOHYuGIS85ZCw40xqG9245TlkZFo3lO4MJS4bhL7E9ExQ=
           "], {{0, 50.}, {50., 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
           0.5],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSize->Magnification[0.5],
         ImageSizeRaw->{50., 50.},
         PlotRange->{{0, 50.}, {0, 50.}}]},
        Alignment->{-0.85, Center}]}, Dynamic[
        CurrentValue["MouseOver"]]], Scaled[{0, 0}], Scaled[{0, 0}]]},
    AspectRatio->Full,
    ImagePadding->None,
    ImageSize->{720, 80},
    PlotRangePadding->None]],
  MouseAppearanceTag["LinkHand"]]], "NotesThumbnails",
 CellID->115023522,ExpressionUUID->"d5929f45-14c5-42c7-be79-8869920e4347"],

Cell["", "ExampleSectionDelimiter",
 CellID->150334911,ExpressionUUID->"161d5047-97f0-4144-9d5b-61968b54efca"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData[{"Examples", "\[NonBreakingSpace]\[NonBreakingSpace]", 
      Cell["(2)", "ExampleCount"]}]], 6, {
   TaggingRules, "Openers", "PrimaryExamplesSection", "0"}, 
   RGBColor[
    Rational[217, 255], 
    Rational[101, 255], 0]},
  "SectionOpener"]], "PrimaryExamplesSection", "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellID->456047288,ExpressionUUID->"b5d5d39b-cd9a-4f29-b345-8b841a73a3ee"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData[{"Basic examples", "\[NonBreakingSpace]\[NonBreakingSpace]", 
      Cell["(1)", "ExampleCount"]}]], 0, {
   TaggingRules, "Openers", "ExampleSection", "0"}, 
   RGBColor[
    Rational[217, 255], 
    Rational[101, 255], 0]},
  "SectionOpener"]], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->41723485,ExpressionUUID->"259da277-030c-4c74-aed4-0972aa4d3c8a"],

Cell["Load the EinsteinSummation package:", "ExampleText",
 CellID->67546621,ExpressionUUID->"9b8d2077-8fbd-42df-8bc1-0c428f206847"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<EinsteinSummation`\>\"", "]"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[1]:=",
 CellID->233094828,ExpressionUUID->"9b98b328-9885-4c7b-bef8-78bef8271b00"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ButtonBox["\<\"Einstein Summation Package Guide \[RightSkeleton]\"\>",
      Appearance->Automatic,
      BaseStyle->"Link",
      ButtonData->
       "paclet:EinsteinSummation/ReferencePages/Guides/\
TensorExpressionswithEinsteinSummation",
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox["\<\"Einstein Summation Tutorial \[RightSkeleton]\"\>",
      Appearance->Automatic,
      BaseStyle->"Link",
      ButtonData->
       "paclet:EinsteinSummation/ReferencePages/Tutorials/EinsteinSummation",
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
  "Column"]], "Print",
 CellContext->"Notebook$$16$428676`",
 CellLabel->"\:6b63\:5728\:8ba1\:7b97In[1]:=",
 CellID->467472947,ExpressionUUID->"67176fde-8440-4cc9-ba8e-1cfff8c8828a"]
}, Open  ]],

Cell["check the parameters choosed:", "ExampleText",
 CellID->564856215,ExpressionUUID->"c7dfe9c6-b3db-4f18-8d18-cb2dac82f921"],

Cell[CellGroupData[{

Cell[BoxData["$vars"], "Input",
 InitializationCell->False,
 CellLabel->"In[2]:=",
 CellID->387521409,ExpressionUUID->"00ba5e09-3666-4ee5-a6c5-2e2cc9721990"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}]], "Output",
 CellContext->"Notebook$$86$376800`",
 CellLabel->"Out[2]=",
 CellID->473966611,ExpressionUUID->"7b64496c-a228-4460-acb8-f214a5628210"]
}, Open  ]],

Cell["Calculate trace of the metric:", "ExampleText",
 CellID->261635589,ExpressionUUID->"2f79d5fe-1fc3-4494-a580-a0866cc4835d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EvaluateEinsteinSummation", "[", 
  InterpretationBox[
   RowBox[{
    TagBox["$tensorSymb",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             StyleBox[
              PaneBox[
               TemplateBox[{
                 TemplateBox[{
                   StyleBox["\"g\"", Bold, 24., StripOnInput -> False]}, 
                  "Row", DisplayFunction -> (
                   PaneBox[#, BaselinePosition -> Center]& ), 
                  InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], 
                 TagBox[
                  
                  GridBox[{{"\"\[Mu]\"", "\"\""}, {"\"\"", "\"\[Mu]\""}}, 
                   GridBoxAlignment -> {"Rows" -> {{Baseline}}}, AutoDelete -> 
                   False, GridBoxFrame -> {"Columns" -> None, "Rows" -> None},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0}}, 
                    "Rows" -> {0, {1.157142857142857}, 0}}, BaselinePosition -> 
                   Center], "Grid"]}, "Row", DisplayFunction -> (PaneBox[
                  RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
                  Center]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
               ImageSize -> {
                 UpTo[139], 38.57142857142857}, ImageSizeAction -> 
               "ResizeToFit", Alignment -> {Center, Top}, ImageSize -> {
                 UpTo[174], 38.57142857142857}], 
              LinebreakAdjustments -> {1000, 2, 12, 1, 1}, StripOnInput -> 
              False], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Symbol: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"g\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["2", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             StyleBox[
              PaneBox[
               TemplateBox[{
                 TemplateBox[{
                   StyleBox["\"g\"", Bold, 24., StripOnInput -> False]}, 
                  "Row", 
                  DisplayFunction -> (
                   PaneBox[#, BaselinePosition -> Center]& ), 
                  InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], 
                 TagBox[
                  
                  GridBox[{{"\"\[Mu]\"", "\"\""}, {"\"\"", "\"\[Mu]\""}}, 
                   GridBoxAlignment -> {"Rows" -> {{Baseline}}}, AutoDelete -> 
                   False, GridBoxFrame -> {"Columns" -> None, "Rows" -> None},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0}}, 
                    "Rows" -> {0, {1.157142857142857}, 0}}, BaselinePosition -> 
                   Center], "Grid"]}, "Row", DisplayFunction -> (PaneBox[
                  RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
                  Center]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
               ImageSize -> {
                 UpTo[139], 38.57142857142857}, ImageSizeAction -> 
               "ResizeToFit", Alignment -> {Center, Top}, ImageSize -> {
                 UpTo[174], 38.57142857142857}], 
              LinebreakAdjustments -> {1000, 2, 12, 1, 1}, StripOnInput -> 
              False], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Symbol: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"g\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["2", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Index Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"\[Mu]\"", ",", "\"\[Mu]\""}], "}"}], 
                    Short[#, 0.4]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Index Position: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], Short[#, 0.4]& ], 
                   "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Symmetry Marker: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}], 
                    Short[#, 0.4]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   EinsteinSummation`$tensorSymb[
    Association[
    "Symbol" -> "g", "IndexName" -> {"\[Mu]", "\[Mu]"}, "Dimensions" -> 2, 
     "IndexPosition" -> {1, -1}, "SymmetryMarker" -> 
     Association[-1 -> {}, 1 -> {}]]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "]"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[3]:=",
 CellID->463628704,ExpressionUUID->"93d192b1-8351-4ae1-af6b-14255b8e67ab"],

Cell[BoxData["4"], "Output",
 CellContext->"Notebook$$86$376800`",
 CellLabel->"Out[3]=",
 CellID->169425092,ExpressionUUID->"d30e8f72-4efa-4bac-9688-7a13e360e404"]
}, Open  ]],

Cell["Edit using SetVars:", "ExampleText",
 CellID->326457897,ExpressionUUID->"d91a1888-8cba-4758-8c0b-297abf0d2bed"],

Cell[BoxData[
 RowBox[{"SetVars", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[4]:=",
 CellID->17071731,ExpressionUUID->"1b87092d-596a-4ff7-a090-e0d96f476d23"],

Cell["Calculate Again:", "ExampleText",
 CellID->769487504,ExpressionUUID->"dc5dbe09-cdce-4eb4-87d4-3a9f2404f544"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EvaluateEinsteinSummation", "[", 
  InterpretationBox[
   RowBox[{
    TagBox["$tensorSymb",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             StyleBox[
              PaneBox[
               TemplateBox[{
                 TemplateBox[{
                   StyleBox["\"g\"", Bold, 24., StripOnInput -> False]}, 
                  "Row", DisplayFunction -> (
                   PaneBox[#, BaselinePosition -> Center]& ), 
                  InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], 
                 TagBox[
                  
                  GridBox[{{"\"\[Mu]\"", "\"\""}, {"\"\"", "\"\[Mu]\""}}, 
                   GridBoxAlignment -> {"Rows" -> {{Baseline}}}, AutoDelete -> 
                   False, GridBoxFrame -> {"Columns" -> None, "Rows" -> None},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0}}, 
                    "Rows" -> {0, {1.157142857142857}, 0}}, BaselinePosition -> 
                   Center], "Grid"]}, "Row", DisplayFunction -> (PaneBox[
                  RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
                  Center]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
               ImageSize -> {
                 UpTo[139], 38.57142857142857}, ImageSizeAction -> 
               "ResizeToFit", Alignment -> {Center, Top}, ImageSize -> {
                 UpTo[174], 38.57142857142857}], 
              LinebreakAdjustments -> {1000, 2, 12, 1, 1}, StripOnInput -> 
              False], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Symbol: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"g\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["2", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             StyleBox[
              PaneBox[
               TemplateBox[{
                 TemplateBox[{
                   StyleBox["\"g\"", Bold, 24., StripOnInput -> False]}, 
                  "Row", 
                  DisplayFunction -> (
                   PaneBox[#, BaselinePosition -> Center]& ), 
                  InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], 
                 TagBox[
                  
                  GridBox[{{"\"\[Mu]\"", "\"\""}, {"\"\"", "\"\[Mu]\""}}, 
                   GridBoxAlignment -> {"Rows" -> {{Baseline}}}, AutoDelete -> 
                   False, GridBoxFrame -> {"Columns" -> None, "Rows" -> None},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0}}, 
                    "Rows" -> {0, {1.157142857142857}, 0}}, BaselinePosition -> 
                   Center], "Grid"]}, "Row", DisplayFunction -> (PaneBox[
                  RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
                  Center]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
               ImageSize -> {
                 UpTo[139], 38.57142857142857}, ImageSizeAction -> 
               "ResizeToFit", Alignment -> {Center, Top}, ImageSize -> {
                 UpTo[174], 38.57142857142857}], 
              LinebreakAdjustments -> {1000, 2, 12, 1, 1}, StripOnInput -> 
              False], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Symbol: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"g\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["2", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Index Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"\[Mu]\"", ",", "\"\[Mu]\""}], "}"}], 
                    Short[#, 0.4]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Index Position: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], Short[#, 0.4]& ], 
                   "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Symmetry Marker: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}], 
                    Short[#, 0.4]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   EinsteinSummation`$tensorSymb[
    Association[
    "Symbol" -> "g", "IndexName" -> {"\[Mu]", "\[Mu]"}, "Dimensions" -> 2, 
     "IndexPosition" -> {1, -1}, "SymmetryMarker" -> 
     Association[-1 -> {}, 1 -> {}]]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "]"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[5]:=",
 CellID->85992548,ExpressionUUID->"9fc9108c-c9f8-4505-b023-eb4f65658648"],

Cell[BoxData["3"], "Output",
 CellContext->"Notebook$$86$376800`",
 CellLabel->"Out[5]=",
 CellID->317852359,ExpressionUUID->"cb631a10-3f19-416a-9d43-9b367fc3d800"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}]]]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData[{"Possible issues", "\[NonBreakingSpace]\[NonBreakingSpace]", 
      Cell["(1)", "ExampleCount"]}]], 0, {
   TaggingRules, "Openers", "ExampleSection", "1"}, 
   RGBColor[
    Rational[217, 255], 
    Rational[101, 255], 0]},
  "SectionOpener"]], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->938352945,ExpressionUUID->"6b056773-a5f8-472b-b293-df054b383117"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
   "$TensorDefinitions", 
    "paclet:EinsteinSummation/ReferencePages/Symbols/$TensorDefinitions"},
   "RefLink",
   BaseStyle->{}]], "InlineFormula", "InlineFormula",ExpressionUUID->
  "483d1a00-313a-41b8-a204-25e89e39466c"],
 " will be cleaned each time you change the dimension of your space through ",
 Cell[BoxData[
  TemplateBox[{
   "SetVars", "paclet:EinsteinSummation/ReferencePages/Symbols/SetVars"},
   "RefLink",
   BaseStyle->{}]], "InlineFormula", "InlineFormula",ExpressionUUID->
  "fb0bc585-2efe-44f5-bae4-a04c9ef731ec"],
 ":"
}], "ExampleText",
 CellID->29925789,ExpressionUUID->"e8d96286-093f-4c36-bc7a-13674adb3cff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetVars", "[", 
   RowBox[{"{", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AddTensorToDataset", "[", 
   RowBox[{
    InterpretationBox[
     RowBox[{
      TagBox["$tensorSymb",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                PaneBox[
                 TemplateBox[{
                   TemplateBox[{
                    StyleBox["\"A\"", Bold, 24., StripOnInput -> False]}, 
                    "Row", DisplayFunction -> (
                    PaneBox[#, BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], 
                   TagBox[
                    
                    GridBox[{{"\"\""}, {"\"\[Mu]\""}}, 
                    GridBoxAlignment -> {"Rows" -> {{Baseline}}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> None, "Rows" -> None}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, 
                    "Rows" -> {0, {1.157142857142857}, 0}}, BaselinePosition -> 
                    Center], "Grid"]}, "Row", DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
                    Center]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
                 ImageSize -> {
                   UpTo[139], 38.57142857142857}, ImageSizeAction -> 
                 "ResizeToFit", Alignment -> {Center, Top}, ImageSize -> {
                   UpTo[174], 38.57142857142857}], 
                LinebreakAdjustments -> {1000, 2, 12, 1, 1}, StripOnInput -> 
                False], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Symbol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"A\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                PaneBox[
                 TemplateBox[{
                   TemplateBox[{
                    StyleBox["\"A\"", Bold, 24., StripOnInput -> False]}, 
                    "Row", DisplayFunction -> (
                    PaneBox[#, BaselinePosition -> Center]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                    "]"}]& )], 
                   TagBox[
                    
                    GridBox[{{"\"\""}, {"\"\[Mu]\""}}, 
                    GridBoxAlignment -> {"Rows" -> {{Baseline}}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> None, "Rows" -> None}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, 
                    "Rows" -> {0, {1.157142857142857}, 0}}, BaselinePosition -> 
                    Center], "Grid"]}, "Row", DisplayFunction -> (PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
                    Center]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
                 ImageSize -> {
                   UpTo[139], 38.57142857142857}, ImageSizeAction -> 
                 "ResizeToFit", Alignment -> {Center, Top}, ImageSize -> {
                   UpTo[174], 38.57142857142857}], 
                LinebreakAdjustments -> {1000, 2, 12, 1, 1}, StripOnInput -> 
                False], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Symbol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"A\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Index Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"{", "\"\[Mu]\"", "}"}], Short[#, 0.4]& ], 
                    "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Index Position: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], Short[#, 0.4]& ], 
                    "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Symmetry Marker: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}], 
                    Short[#, 0.4]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     EinsteinSummation`$tensorSymb[
      Association[
      "Symbol" -> "A", "IndexName" -> {"\[Mu]"}, "Dimensions" -> 1, 
       "IndexPosition" -> {-1}, "SymmetryMarker" -> 
       Association[-1 -> {}, 1 -> {}]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ",", 
    RowBox[{"{", 
     RowBox[{"at", ",", "ax", ",", "ay", ",", "az"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "$TensorDefinitions"}], "Input",
 InitializationCell->False,
 CellLabel->"In[6]:=",
 CellID->1229596,ExpressionUUID->"ec23dedd-fe02-4520-a8d9-fe0ecee0bbd2"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Symbol" -> "g", "Dimensions" -> 2, "IndexPosition" -> {-1, -1}, 
        "Value" -> {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}], 
       Association[
       "Symbol" -> "g", "Dimensions" -> 2, "IndexPosition" -> {1, 1}, 
        "Value" -> {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}], 
       Association[
       "Symbol" -> "\[CapitalGamma]", "Dimensions" -> 3, 
        "IndexPosition" -> {1, -1, -1}, 
        "Value" -> {{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 
         0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 
         0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {
         0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}}], 
       Association[
       "Symbol" -> "A", "Dimensions" -> 1, "IndexPosition" -> {-1}, 
        "Value" -> {$CellContext`at, $CellContext`ax, $CellContext`ay, \
$CellContext`az}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Dimensions"} -> 
        1, {All, "IndexPosition"} -> 1, {All, "Value"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[28.800000000000004`],
             "Dimensions" -> TypeSystem`PackageScope`AtomShape[34], 
            "IndexPosition" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Value" -> TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 4, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Symbol", "Dimensions", "IndexPosition", "Value"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
         TypeSystem`Vector[TypeSystem`AnyType, 4]}], 4], "Meta" -> 
     Association["ID" -> 165326378059232], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Dimensions"} -> 
        1, {All, "IndexPosition"} -> 1, {All, "Value"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[28.800000000000004`],
             "Dimensions" -> TypeSystem`PackageScope`AtomShape[34], 
            "IndexPosition" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Value" -> TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 4, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Symbol", "Dimensions", "IndexPosition", "Value"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
         TypeSystem`Vector[TypeSystem`AnyType, 4]}], 4], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 
     4, "DataRowCount" -> 4, "DataColumnCount" -> 4, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Symbol", 
                    Style[
                    "Symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Symbol"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Symbol"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Dimensions", 
                    Style[
                    "Dimensions", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Dimensions"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Dimensions"}, "ColumnHeader", True], "Mouse"], " ", 
                ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["IndexPosition", 
                    Style[
                    "IndexPosition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "IndexPosition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "IndexPosition"}, "ColumnHeader", True], "Mouse"], " ",
                 ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Value"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["g", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{-1, -1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{-1, -1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                   Key["IndexPosition"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["IndexPosition"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
                   1}}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
                    1}}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                   Key["Value"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["g", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                   Key["IndexPosition"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["IndexPosition"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
                   1}}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
                    1}}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                   Key["Value"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["\[CapitalGamma]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, -1, -1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, -1, -1}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                   Key["IndexPosition"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["IndexPosition"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 4], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 4], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                   Key["Value"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation["A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{-1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{-1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                   Key["IndexPosition"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["IndexPosition"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{$CellContext`at, $CellContext`ax, $CellContext`ay, \
$CellContext`az}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{$CellContext`at, $CellContext`ax, $CellContext`ay, \
$CellContext`az}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                   Key["Value"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
      ImageSizeCache->{545., {75.42857142857143, 80.57142857142857}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{545., {75.42857142857143, 80.57142857142857}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellContext->"Notebook$$86$376800`",
 CellLabel->"Out[8]=",
 CellID->160586583,ExpressionUUID->"14a6d7ae-51f6-4d0f-b4fa-adfe1900670c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SetVars", "[", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "]"}], ";", 
  "$TensorDefinitions"}]], "Input",
 InitializationCell->False,
 CellLabel->"In[9]:=",
 CellID->292714292,ExpressionUUID->"c7699a96-385d-4a9e-975e-e2dea9812bd1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Symbol" -> "g", "Dimensions" -> 2, "IndexPosition" -> {-1, -1}, 
        "Value" -> {{1, 0}, {0, 1}}], 
       Association[
       "Symbol" -> "g", "Dimensions" -> 2, "IndexPosition" -> {1, 1}, 
        "Value" -> {{1, 0}, {0, 1}}], 
       Association[
       "Symbol" -> "\[CapitalGamma]", "Dimensions" -> 3, 
        "IndexPosition" -> {1, -1, -1}, 
        "Value" -> {{{0, 0}, {0, 0}}, {{0, 0}, {0, 0}}}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Dimensions"} -> 
        1, {All, "IndexPosition"} -> 1, {All, "Value"} -> 2], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[28.800000000000004`],
             "Dimensions" -> TypeSystem`PackageScope`AtomShape[34], 
            "IndexPosition" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Value" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`MatrixShape[2, 2], 2, 2, {
              All, "Value", All}]]], 
          DirectedInfinity[1], 4, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Symbol", "Dimensions", "IndexPosition", "Value"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
         TypeSystem`Vector[
          TypeSystem`Vector[TypeSystem`AnyType, 2], 2]}], 3], "Meta" -> 
     Association["ID" -> 165356442830307], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Dimensions"} -> 
        1, {All, "IndexPosition"} -> 1, {All, "Value"} -> 2], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[28.800000000000004`],
             "Dimensions" -> TypeSystem`PackageScope`AtomShape[34], 
            "IndexPosition" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Value" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`MatrixShape[2, 2], 2, 2, {
              All, "Value", All}]]], 
          DirectedInfinity[1], 4, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Symbol", "Dimensions", "IndexPosition", "Value"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
         TypeSystem`Vector[
          TypeSystem`Vector[TypeSystem`AnyType, 2], 2]}], 3], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 
     4, "DataRowCount" -> 3, "DataColumnCount" -> 4, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Symbol", 
                    Style[
                    "Symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Symbol"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Symbol"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Dimensions", 
                    Style[
                    "Dimensions", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Dimensions"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Dimensions"}, "ColumnHeader", True], "Mouse"], " ", 
                ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["IndexPosition", 
                    Style[
                    "IndexPosition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "IndexPosition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "IndexPosition"}, "ColumnHeader", True], "Mouse"], " ",
                 ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Value"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Value"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], 
            SpanFromLeft}, {
            Item[
             Pane[
              Annotation["g", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{-1, -1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{-1, -1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                   Key["IndexPosition"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["IndexPosition"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Value"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Value"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Value"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Value"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["g", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                   Key["IndexPosition"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["IndexPosition"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Value"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Value"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Value"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Value"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["\[CapitalGamma]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, -1, -1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, -1, -1}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                   Key["IndexPosition"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["IndexPosition"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Value"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Value"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Value"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Value"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
      ImageSizeCache->{397., {100.42857142857143`, 105.57142857142857`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{397., {100.42857142857143`, 105.57142857142857`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellContext->"Notebook$$86$376800`",
 CellLabel->"Out[9]=",
 CellID->67204361,ExpressionUUID->"5de41ade-c281-4862-a9d0-abe1bcb21ad8"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}]]]],

Cell["", "SectionFooterSpacer",
 CellID->97424495,ExpressionUUID->"c1b6210a-9c63-4ee8-b1ae-e0afae242196"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "PrimaryExamplesSection", "0"}]]]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"See Also"},
  "LinkSectionHeader"]], "SeeAlsoSection", "SeeAlsoSection", \
"LinkSectionHeader",
 CellID->28387550,ExpressionUUID->"5bec3c4b-10f3-4dc4-a539-2dc961370a20"],

Cell[BoxData[
 TemplateBox[{"RelatedFunction.png", "See Also", 
   GridBox[{{
      Cell[
       TextData[{
         Cell[
          BoxData[
           
           TemplateBox[{
            "SetMetric", 
             "paclet:EinsteinSummation/ReferencePages/Symbols/SetMetric"}, 
            "RefLink", BaseStyle -> {"SeeAlsoItem"}]], "InlineFormula", 
          "InlineFormula"], "\[NonBreakingSpace]", 
         StyleBox[
         "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
          "InlineSeparator"], " ", 
         Cell[
          BoxData[
           
           TemplateBox[{
            "$vars", "paclet:EinsteinSummation/ReferencePages/Symbols/$vars"},
             "RefLink", BaseStyle -> {"SeeAlsoItem"}]], "InlineFormula", 
          "InlineFormula"], "\[NonBreakingSpace]", 
         StyleBox[
         "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
          "InlineSeparator"], " ", 
         Cell[
          BoxData[
           
           TemplateBox[{
            "$TensorDefinitions", 
             "paclet:EinsteinSummation/ReferencePages/Symbols/$\
TensorDefinitions"}, "RefLink", BaseStyle -> {"SeeAlsoItem"}]], 
          "InlineFormula", "InlineFormula"], "\[NonBreakingSpace]", 
         StyleBox[
         "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
          "InlineSeparator"], " ", 
         Cell[
          BoxData[
           
           TemplateBox[{
            "EvaluateEinsteinSummation", 
             "paclet:EinsteinSummation/ReferencePages/Symbols/\
EvaluateEinsteinSummation"}, "RefLink", BaseStyle -> {"SeeAlsoItem"}]], 
          "InlineFormula", "InlineFormula"]}], "SeeAlso"]}}]},
  "LinkSectionContent"]], "SeeAlsoSection", "SeeAlsoSection", \
"LinkSectionContent",
 CellID->361020591,ExpressionUUID->"aa39e7cb-d3de-429e-be1c-f0b7e45d2c6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"Tutorials"},
  "LinkSectionHeader"]], "TutorialsSection", "TutorialsSection", \
"LinkSectionHeader",
 CellID->58729616,ExpressionUUID->"03f2ef76-8265-4777-b38c-250e98f30356"],

Cell["", "SectionHeaderSpacer",
 CellID->18800420,ExpressionUUID->"e88ef368-3e07-40f1-8071-f621fd6b4e9d"],

Cell[BoxData[
 TemplateBox[{"RelatedTutorial.png", "Tutorials", 
   GridBox[{{
      RowBox[{"\[FilledVerySmallSquare]", 
        Cell[
         BoxData[
          
          TemplateBox[{
           "Einstein Summation", 
            "paclet:EinsteinSummation/ReferencePages/Tutorials/\
EinsteinSummation"}, "RefLinkPlain", BaseStyle -> {"Tutorials"}]], 
         "Tutorials"]}]}}]},
  "LinkSectionContent"]], "TutorialsSection", "TutorialsSection", \
"LinkSectionContent", "SpacerMargins",
 CellID->16679624,ExpressionUUID->"c04c282f-dbcb-498f-87f8-9effe50b90c9"],

Cell["", "SectionFooterSpacer",
 CellID->399867031,ExpressionUUID->"9486e9da-b12d-4782-bc43-83fd85746852"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"Related Guides"},
  "LinkSectionHeader"]], "MoreAboutSection", "MoreAboutSection", \
"LinkSectionHeader",
 CellID->554315202,ExpressionUUID->"3e5fc3b1-0492-4dea-b5b1-21ec941b398f"],

Cell["", "SectionHeaderSpacer",
 CellID->555750318,ExpressionUUID->"2c95079c-dd05-4077-b057-e3e6761c295b"],

Cell[BoxData[
 TemplateBox[{"RelatedGuide.png", "Related Guides", 
   GridBox[{{
      RowBox[{"\[FilledVerySmallSquare]", 
        Cell[
         BoxData[
          
          TemplateBox[{
           "Tensor Expressions with Einstein Summation", 
            "paclet:EinsteinSummation/ReferencePages/Guides/\
TensorExpressionswithEinsteinSummation"}, "RefLinkPlain", 
           BaseStyle -> {"MoreAbout"}]], "MoreAbout"]}]}}]},
  "LinkSectionContent"]], "MoreAboutSection", "MoreAboutSection", \
"LinkSectionContent", "SpacerMargins",
 CellID->200823396,ExpressionUUID->"ac97b70e-3eb4-4a17-8df6-646910a0ea32"],

Cell["", "SectionFooterSpacer",
 CellID->680728871,ExpressionUUID->"d7818423-8eb7-4280-b671-4e925a86dd42"]
}, Open  ]],

Cell[TextData[{
 "Introduced in ",
 Cell["0.1.0", "HistoryVersion",ExpressionUUID->
  "2127c3d1-924f-4902-9856-8b7f5775bc5e"],
 " | Updated in ",
 Cell["0.2.0", "HistoryVersion",ExpressionUUID->
  "cb5530cd-7043-464b-8c3b-e36b8050c978"]
}], "History",
 CellID->289862842,ExpressionUUID->"29f872c8-3b7c-4c3a-a586-ab89b9b87e77"]
},
Saveable->False,
WindowSize->{585., 655.2857142857142},
WindowMargins->{{288, Automatic}, {Automatic, 42}},
WindowTitle->"SetVars",
Visible->True,
TaggingRules->{
 "NewStyles" -> True, 
  "Metadata" -> {
   "title" -> "SetVars", "description" -> "", "label" -> " Symbol", "context" -> 
    "EinsteinSummation`", "index" -> True, "language" -> "en", "paclet" -> "",
     "type" -> "Symbol", "windowtitle" -> "SetVars", "uri" -> 
    "EinsteinSummation/ReferencePages/Symbols/SetVars", "summary" -> 
    "SetVars[vars] sets up the parametrics of space.", "keywords" -> {}, 
    "WorkflowDockedCell" -> ""}, "LinkTrails" -> "", "SearchTextTranslated" -> 
  "", "Openers" -> {
   "NotesSection" -> {"0" -> True}, 
    "ExampleSection" -> {"0" -> True, "1" -> Closed}, 
    "PrimaryExamplesSection" -> {"0" -> True}}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (2020\:5e744\:670830\
\:65e5)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Wolfram"}, "Reference.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Spacer1"], TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        GraphicsBox[{}, ImageSize -> {#, 0}, 
         BaselinePosition -> (Scaled[0] -> Baseline)], CacheGraphics -> 
        False]& ), InterpretationFunction -> (InterpretationBox["", 
        Spacer[#]]& ), Tooltip -> None}], 
   Cell[
    StyleData["Spacer2"], TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        GraphicsBox[{}, ImageSize -> {#, #2}, 
         BaselinePosition -> (Scaled[0] -> Baseline)], CacheGraphics -> 
        False]& ), InterpretationFunction -> (InterpretationBox["", 
        Spacer[{#, #2}]]& ), Tooltip -> None}], 
   Cell[
    StyleData["RefLinkPlain", StyleDefinitions -> StyleData["RefLink"]]], 
   Cell[
    StyleData["OrangeLink"], TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        ButtonBox[
         StyleBox[#, FontColor -> Dynamic[
            If[
             CurrentValue["MouseOver"], 
             RGBColor[0.854902, 0.396078, 0.145098], Inherited]]], 
         ButtonData -> #2], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {BaseStyle -> {"Link", "GuideFunctionsSubsection"}}], 
   Cell[
    StyleData["WebLink"], AutoSpacing -> False], 
   Cell[
    StyleData["SectionOpener"], ShowGroupOpener -> False, 
    TemplateBoxOptions -> {DisplayFunction -> (Cell[
        TextData[{
          Cell[
           BoxData[
            RotationBox[
             StyleBox[
              GraphicsBox[{
                Thickness[0.18], #4, 
                LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1,
                PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], 
              Magnification -> Dynamic[0.68 CurrentValue[Magnification]], 
              StripOnInput -> False], BoxRotation -> FEPrivate`Switch[
               FrontEnd`CurrentValue[
                FrontEnd`EvaluationNotebook[], #3], True, 0, Open, 0, 
               Blank[], Rational[1, 2] Pi], 
             BoxRotationPoint -> {-1.65, -1}]]], 
          Cell[
           BoxData[
            TemplateBox[{1}, "Spacer1"]]], #}]]& )}], 
   Cell[
    StyleData["LinkSectionHeader"], CellFrame -> {{False, False}, {False, 
       FEPrivate`Less[FEPrivate`$VersionNumber, 12.]}}, WholeCellGroupOpener -> 
    False, CellMargins -> FEPrivate`If[
      FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], 0, 
      FEPrivate`If[
       FEPrivate`Less[FEPrivate`$VersionNumber, 12.], {{24, 22}, {8, 
       28}}, -2]], CellElementSpacings -> {"CellMinHeight" -> FEPrivate`If[
        FEPrivate`Less[FEPrivate`$VersionNumber, 12.], Inherited, 0], 
      "ClosedCellHeight" -> FEPrivate`If[
        FEPrivate`Less[FEPrivate`$VersionNumber, 12.], Inherited, 0]}, 
    CellOpen -> FEPrivate`Less[FEPrivate`$VersionNumber, 12.], 
    TemplateBoxOptions -> {DisplayFunction -> (#& )}], 
   Cell[
    StyleData["SpacerMargins"], CellMargins -> FEPrivate`If[
      FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], {{29, 24}, {1, 1}}, 
      FEPrivate`If[
       FEPrivate`Less[FEPrivate`$VersionNumber, 12.], {{36, 24}, {0, 2}}, {{
       24, 22}, {7, 28}}]]], 
   Cell[
    StyleData["LinkSectionContent"], CellFrame -> {{False, False}, {False, 
       FEPrivate`If[
        FEPrivate`Less[FEPrivate`$VersionNumber, 12.], False, True]}}, 
    CellMargins -> FEPrivate`If[
      FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], {{28, 24}, {25, 14}}, 
      FEPrivate`If[
       FEPrivate`Less[FEPrivate`$VersionNumber, 12.], {{37, 24}, {0, 2}}, {{
       24, 22}, {7, 28}}]], CellGroupingRules -> "NormalGrouping", FontSize -> 
    16, FontWeight -> "Normal", FontColor -> GrayLevel[0.545098], Background -> 
    None, TemplateBoxOptions -> {DisplayFunction -> FEPrivate`If[
        FEPrivate`Less[FEPrivate`$VersionNumber, 12.], #3& , GridBox[{{
           DynamicBox[
            FEPrivate`ImportImage[
             FrontEnd`FileName[{"Documentation", "FooterIcons"}, #]]], 
           
           GridBox[{{#2}, {#3}}, BaseStyle -> {CellFrame -> 0}, 
            GridBoxSpacings -> {"Rows" -> {0, 0.7}}]}}, 
         GridBoxSpacings -> {"Columns" -> {{0.9}}}]& ]}, 
    GridBoxOptions -> {
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
      GridBoxSpacings -> {"Rows" -> {0, {
           FEPrivate`If[
            FEPrivate`Less[FEPrivate`$VersionNumber, 12.], 0.3, 0.2]}}}}], 
   Cell[
    StyleData["SectionHeaderSpacer"], CellMargins -> -2, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["SectionFooterSpacer"], CellMargins -> -2, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["PacletName"], 
    TemplateBoxOptions -> {DisplayFunction -> (GridBox[{{
          ItemBox[
           Cell[
            BoxData[
             RowBox[{
               TemplateBox[{8}, "Spacer1"], 
               Cell[#, "PacletNameCell", TextAlignment -> Center], 
               TemplateBox[{8}, "Spacer1"]}]], TextAlignment -> Center], 
           Background -> #2, ItemSize -> Full], ""}}, 
        GridBoxAlignment -> {"Rows" -> {{Center}}}, 
        GridBoxItemSize -> {"Columns" -> {Full, 
            Scaled[0.02]}, "Rows" -> {{2.5}}}]& )}], 
   Cell[
    StyleData["HeaderMenuArrow"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[2/3], 
         Thickness[0.13], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        ImageSize -> 20, PlotRange -> {{-3, 4}, {-1, 1}}]& )}], 
   Cell[
    StyleData["ContextNameCell"], Editable -> False, ShowCellBracket -> False,
     CellMargins -> {{24, 22}, {0, 0}}, FontFamily -> "Source Sans Pro", 
    FontSize -> 18, FontWeight -> "Bold", FontColor -> GrayLevel[
      Rational[44, 85]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["UnevaluatedInput", StyleDefinitions -> StyleData["Input"]]], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["NotesThumbnails"], ShowCellBracket -> False, 
    CellMargins -> {{32, Inherited}, {0, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> FEPrivate`Switch[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection", "0"}], True, False, Open, 
      False, 
      Blank[], True]], 
   Cell[
    StyleData["DetailsHeader"], 
    TemplateBoxOptions -> {DisplayFunction -> ("Details and Options"& )}], 
   Cell[
    StyleData[
    "ExampleSectionDelimiter", StyleDefinitions -> 
     StyleData["PageDelimiter"]], CellMargins -> FEPrivate`If[
      FEPrivate`Less[FEPrivate`$VersionNumber, 12.], -2, {{24, 14}, {12, 
      12}}], CellOpen -> FEPrivate`If[
      FEPrivate`Less[FEPrivate`$VersionNumber, 12.], False, True]], 
   Cell[
    StyleData["SeeAlsoItem", StyleDefinitions -> "InlineFormula"], FontFamily -> 
    "Source Sans Pro"]}, Visible -> False, FrontEndVersion -> 
  "12.1 for Microsoft Windows (64-bit) (2020\:5e744\:670830\:65e5)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"79739d9b-4ecd-4d9c-b99b-604719e2282c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[579, 21, 3284, 82, 88, "AnchorBarGrid",ExpressionUUID->"6ed6c646-0db9-4b81-9ba7-87c65bb826fc",
 CellID->6332795],
Cell[3866, 105, 119, 1, 23, "ContextNameCell",ExpressionUUID->"b99370b0-c192-42f2-937c-aab4b7bc48b3",
 CellID->52132611],
Cell[CellGroupData[{
Cell[4010, 110, 104, 1, 53, "ObjectName",ExpressionUUID->"b4213063-416c-40d7-b06b-df6b29924d8f",
 CellID->146560904],
Cell[4117, 113, 735, 18, 113, "Usage",ExpressionUUID->"236f35cf-347f-46b5-b5f8-6f597e0d3870",
 CellID->50325162]
}, Open  ]],
Cell[CellGroupData[{
Cell[4889, 136, 451, 14, 36, "NotesSection",ExpressionUUID->"4dac352d-6d16-4142-a707-8e03fdef69f5",
 CellID->161981613],
Cell[5343, 152, 209, 4, 57, "Notes",ExpressionUUID->"34bfe762-1a54-4f9b-ae83-1ed13080781f",
 CellID->380875200],
Cell[5555, 158, 947, 24, 60, "Notes",ExpressionUUID->"d70180a1-871a-45a6-963c-e2de95690e6e",
 CellID->50986788]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection", "0"}]]]],
Cell[6604, 186, 10856, 213, 2, "NotesThumbnails",ExpressionUUID->"d5929f45-14c5-42c7-be79-8869920e4347",
 CellID->115023522],
Cell[17463, 401, 110, 1, 26, "ExampleSectionDelimiter",ExpressionUUID->"161d5047-97f0-4144-9d5b-61968b54efca",
 CellID->150334911],
Cell[CellGroupData[{
Cell[17598, 406, 454, 11, 37, "PrimaryExamplesSection",ExpressionUUID->"b5d5d39b-cd9a-4f29-b345-8b841a73a3ee",
 CellID->456047288],
Cell[CellGroupData[{
Cell[18077, 421, 435, 11, 32, "ExampleSection",ExpressionUUID->"259da277-030c-4c74-aed4-0972aa4d3c8a",
 CellID->41723485],
Cell[18515, 434, 132, 1, 38, "ExampleText",ExpressionUUID->"9b8d2077-8fbd-42df-8bc1-0c428f206847",
 CellID->67546621],
Cell[CellGroupData[{
Cell[18672, 439, 207, 4, 26, "Input",ExpressionUUID->"9b98b328-9885-4c7b-bef8-78bef8271b00",
 InitializationCell->False,
 CellID->233094828],
Cell[18882, 445, 1036, 27, 52, "Print",ExpressionUUID->"67176fde-8440-4cc9-ba8e-1cfff8c8828a",
 CellID->467472947]
}, Open  ]],
Cell[19933, 475, 127, 1, 38, "ExampleText",ExpressionUUID->"c7dfe9c6-b3db-4f18-8d18-cb2dac82f921",
 CellID->564856215],
Cell[CellGroupData[{
Cell[20085, 480, 157, 3, 26, "Input",ExpressionUUID->"00ba5e09-3666-4ee5-a6c5-2e2cc9721990",
 InitializationCell->False,
 CellID->387521409],
Cell[20245, 485, 229, 5, 35, "Output",ExpressionUUID->"7b64496c-a228-4460-acb8-f214a5628210",
 CellID->473966611]
}, Open  ]],
Cell[20489, 493, 128, 1, 38, "ExampleText",ExpressionUUID->"2f79d5fe-1fc3-4494-a580-a0866cc4835d",
 CellID->261635589],
Cell[CellGroupData[{
Cell[20642, 498, 9371, 193, 72, "Input",ExpressionUUID->"93d192b1-8351-4ae1-af6b-14255b8e67ab",
 InitializationCell->False,
 CellID->463628704],
Cell[30016, 693, 164, 3, 35, "Output",ExpressionUUID->"d30e8f72-4efa-4bac-9688-7a13e360e404",
 CellID->169425092]
}, Open  ]],
Cell[30195, 699, 117, 1, 38, "ExampleText",ExpressionUUID->"d91a1888-8cba-4758-8c0b-297abf0d2bed",
 CellID->326457897],
Cell[30315, 702, 242, 6, 26, "Input",ExpressionUUID->"1b87092d-596a-4ff7-a090-e0d96f476d23",
 InitializationCell->False,
 CellID->17071731],
Cell[30560, 710, 114, 1, 38, "ExampleText",ExpressionUUID->"dc5dbe09-cdce-4eb4-87d4-3a9f2404f544",
 CellID->769487504],
Cell[CellGroupData[{
Cell[30699, 715, 9370, 193, 72, "Input",ExpressionUUID->"9fc9108c-c9f8-4505-b023-eb4f65658648",
 InitializationCell->False,
 CellID->85992548],
Cell[40072, 910, 164, 3, 35, "Output",ExpressionUUID->"cb631a10-3f19-416a-9d43-9b367fc3d800",
 CellID->317852359]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}]]]],
Cell[CellGroupData[{
Cell[40374, 920, 437, 11, 32, "ExampleSection",ExpressionUUID->"6b056773-a5f8-472b-b293-df054b383117",
 CellID->938352945],
Cell[40814, 933, 683, 17, 61, "ExampleText",ExpressionUUID->"e8d96286-093f-4c36-bc7a-13674adb3cff",
 CellID->29925789],
Cell[CellGroupData[{
Cell[41522, 954, 9851, 203, 127, "Input",ExpressionUUID->"ec23dedd-fe02-4520-a8d9-fe0ecee0bbd2",
 InitializationCell->False,
 CellID->1229596],
Cell[51376, 1159, 45139, 824, 179, "Output",ExpressionUUID->"14a6d7ae-51f6-4d0f-b4fa-adfe1900670c",
 CellID->160586583]
}, Open  ]],
Cell[CellGroupData[{
Cell[96552, 1988, 278, 8, 26, "Input",ExpressionUUID->"c7699a96-385d-4a9e-975e-e2dea9812bd1",
 InitializationCell->False,
 CellID->292714292],
Cell[96833, 1998, 43035, 804, 229, "Output",ExpressionUUID->"5de41ade-c281-4862-a9d0-abe1bcb21ad8",
 CellID->67204361]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}]]]],
Cell[139984, 2807, 105, 1, 0, "SectionFooterSpacer",ExpressionUUID->"c1b6210a-9c63-4ee8-b1ae-e0afae242196",
 CellID->97424495]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection", "0"}]]]],
Cell[CellGroupData[{
Cell[140226, 2815, 198, 4, 0, "SeeAlsoSection",ExpressionUUID->"5bec3c4b-10f3-4dc4-a539-2dc961370a20",
 CellID->28387550],
Cell[140427, 2821, 1823, 47, 113, "SeeAlsoSection",ExpressionUUID->"aa39e7cb-d3de-429e-be1c-f0b7e45d2c6c",
 CellID->361020591]
}, Open  ]],
Cell[CellGroupData[{
Cell[142287, 2873, 203, 4, 0, "TutorialsSection",ExpressionUUID->"03f2ef76-8265-4777-b38c-250e98f30356",
 CellID->58729616],
Cell[142493, 2879, 105, 1, 0, "SectionHeaderSpacer",ExpressionUUID->"e88ef368-3e07-40f1-8071-f621fd6b4e9d",
 CellID->18800420],
Cell[142601, 2882, 565, 14, 113, "TutorialsSection",ExpressionUUID->"c04c282f-dbcb-498f-87f8-9effe50b90c9",
 CellID->16679624],
Cell[143169, 2898, 106, 1, 0, "SectionFooterSpacer",ExpressionUUID->"9486e9da-b12d-4782-bc43-83fd85746852",
 CellID->399867031]
}, Open  ]],
Cell[CellGroupData[{
Cell[143312, 2904, 209, 4, 0, "MoreAboutSection",ExpressionUUID->"3e5fc3b1-0492-4dea-b5b1-21ec941b398f",
 CellID->554315202],
Cell[143524, 2910, 106, 1, 0, "SectionHeaderSpacer",ExpressionUUID->"2c95079c-dd05-4077-b057-e3e6761c295b",
 CellID->555750318],
Cell[143633, 2913, 612, 14, 113, "MoreAboutSection",ExpressionUUID->"ac97b70e-3eb4-4a17-8df6-646910a0ea32",
 CellID->200823396],
Cell[144248, 2929, 106, 1, 0, "SectionFooterSpacer",ExpressionUUID->"d7818423-8eb7-4280-b671-4e925a86dd42",
 CellID->680728871]
}, Open  ]],
Cell[144369, 2933, 326, 8, 48, "History",ExpressionUUID->"29f872c8-3b7c-4c3a-a586-ab89b9b87e77",
 CellID->289862842]
}
]
*)

